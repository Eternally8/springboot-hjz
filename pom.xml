<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.jz</groupId>
    <!--此处为工程名字,具体的项目名字是在application-dev.yml中配置的,项目名字为springBootDemo 此处为小写大写会报错-->
    <artifactId>springbootdemo</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>springbootdemo</name>
    <description>Demo project for Spring Boot</description>

    <properties>
        <java.version>1.8</java.version>
        <encoding>UTF-8</encoding>

        <mysql-connect-java-v>8.0.22</mysql-connect-java-v>
        <druid-spring-boot-starter-v>1.2.1</druid-spring-boot-starter-v>
        <mybatis-spring-boot-mybatis-v>2.1.3</mybatis-spring-boot-mybatis-v>
        <mybatis-plus-boot-starter-v>3.4.0</mybatis-plus-boot-starter-v>

        <mybatis-generator-maven-plugin-v>1.4.0</mybatis-generator-maven-plugin-v>

        <knife4j-v>3.0.1</knife4j-v>

        <xxl-job-v>2.2.0</xxl-job-v>
        <apollo-v>1.5.1</apollo-v>
        <commons-lang3-v>3.9</commons-lang3-v>

        <junit-v>4.12</junit-v>
        <fastjson-v>1.2.58</fastjson-v>
        <gson-v>2.8.5</gson-v>
        <guava-v>27.1-jre</guava-v>
        <lombok-v>1.18.10</lombok-v>
        <org.mapstruct.version>1.3.0.Final</org.mapstruct.version>

        <maven-invoker-v>3.0.1</maven-invoker-v>
        <jruby-complete-v>9.2.8.0</jruby-complete-v>

        <spring-kafka-v>2.4.1.RELEASE</spring-kafka-v>

        <docker-maven-plugin-v>1.2.0</docker-maven-plugin-v>
    </properties>


    <!--SpringBoot的父依赖启动 -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.2.RELEASE</version>
        <relativePath/>
    </parent>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>junit</artifactId>
                    <groupId>junit</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <scope>true</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-elasticsearch</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>log4j-api</artifactId>
                    <groupId>org.apache.logging.log4j</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>joda-time</artifactId>
                    <groupId>joda-time</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>jopt-simple</artifactId>
                    <groupId>net.sf.jopt-simple</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>snakeyaml</artifactId>
                    <groupId>org.yaml</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
        </dependency>

        <!--spring boot对spring aop的支持组件-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>


        <!--####################数据库连接配置mybatis########################-->
        <!--mysql 连接驱动链接-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql-connect-java-v}</version>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
            <version>${druid-spring-boot-starter-v}</version>
        </dependency>
        <!--springboot-mybaits-->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>${mybatis-spring-boot-mybatis-v}</version>
        </dependency>

        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-boot-starter</artifactId>
            <version>${mybatis-plus-boot-starter-v}</version>
        </dependency>

        <!-- ###################swagger###########################-->
        <dependency>
            <groupId>com.github.xiaoymin</groupId>
            <artifactId>knife4j-spring-boot-starter</artifactId>
            <version>${knife4j-v}</version>
            <exclusions>
                <exclusion>
                    <artifactId>mapstruct</artifactId>
                    <groupId>org.mapstruct</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- ###################第三方框架#####################-->
        <dependency>
            <groupId>com.xuxueli</groupId>
            <artifactId>xxl-job-core</artifactId>
            <version>${xxl-job-v}</version>
            <exclusions>
                <exclusion>
                    <artifactId>gson</artifactId>
                    <groupId>com.google.code.gson</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--apollo-->
        <dependency>
            <groupId>com.ctrip.framework.apollo</groupId>
            <artifactId>apollo-client</artifactId>
            <version>${apollo-v}</version>
            <exclusions>
                <exclusion>
                    <artifactId>gson</artifactId>
                    <groupId>com.google.code.gson</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>guava</artifactId>
                    <groupId>com.google.guava</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>snakeyaml</artifactId>
                    <groupId>org.yaml</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- 为了编码方便，并非apollo 必须的依赖 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3-v}</version>
        </dependency>

        <!--junit-->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit-v}</version>
        </dependency>

        <!--fastjson-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson-v}</version>
        </dependency>

        <!--gson-->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson-v}</version>
        </dependency>

        <!--guava-->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava-v}</version>
        </dependency>
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>5.4.7</version>
        </dependency>


        <!-- mapstruct -->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${org.mapstruct.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
            <version>${org.mapstruct.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok-v}</version>
        </dependency>

        <dependency>
            <groupId>org.jruby</groupId>
            <artifactId>jruby-complete</artifactId>
            <version>${jruby-complete-v}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
            <version>${spring-kafka-v}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.carrotsearch/java-sizeof -->
        <dependency>
            <groupId>com.carrotsearch</groupId>
            <artifactId>java-sizeof</artifactId>
            <version>0.0.5</version>
        </dependency>


    </dependencies>


<!--    <build>-->
<!--        <plugins>-->
<!--            &lt;!&ndash; 指定启动类，将依赖打成外部jar包 &ndash;&gt;-->
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-jar-plugin</artifactId>-->
<!--                <configuration>-->
<!--                    <archive>-->
<!--                        &lt;!&ndash; 生成的jar中，不要包含pom.xml和pom.properties这两个文件 &ndash;&gt;-->
<!--                        <addMavenDescriptor>false</addMavenDescriptor>-->
<!--                        <manifest>-->
<!--                            &lt;!&ndash; 是否要把第三方jar加入到类构建路径 &ndash;&gt;-->
<!--                            <addClasspath>true</addClasspath>-->
<!--                            &lt;!&ndash; 外部依赖jar包的最终位置 &ndash;&gt;-->
<!--                            <classpathPrefix>lib/</classpathPrefix>-->
<!--                            &lt;!&ndash; 项目启动类 &ndash;&gt;-->
<!--                            <mainClass>com.jz.Application</mainClass>-->
<!--                        </manifest>-->
<!--                    </archive>-->
<!--                </configuration>-->
<!--            </plugin>-->
<!--            &lt;!&ndash;拷贝依赖到jar外面的lib目录&ndash;&gt;-->
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-dependency-plugin</artifactId>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>copy-lib</id>-->
<!--                        <phase>package</phase>-->
<!--                        <goals>-->
<!--                            <goal>copy-dependencies</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                            <outputDirectory>target/lib</outputDirectory>-->
<!--                            <excludeTransitive>false</excludeTransitive>-->
<!--                            <stripVersion>false</stripVersion>-->
<!--                            <includeScope>runtime</includeScope>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
<!--        </plugins>-->
<!--    </build>-->


    <!--    打全量包-->
        <build>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <configuration>
                        <!-- 没有该配置，devtools 不生效 -->
                        <fork>true</fork>
                        <addResources>true</addResources>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <source>8</source>
                        <target>8</target>
                    </configuration>
                </plugin>
            </plugins>
        </build>


    <!--    &lt;!&ndash;使用docker容器自动构建&ndash;&gt;-->
    <!--    <build>-->
    <!--        <plugins>-->
    <!--            <plugin>-->
    <!--                <groupId>org.springframework.boot</groupId>-->
    <!--                <artifactId>spring-boot-maven-plugin</artifactId>-->
    <!--            </plugin>-->

    <!--            &lt;!&ndash;配置项目打包后直接上传到镜像到服务器&ndash;&gt;-->
    <!--            <plugin>-->
    <!--                <groupId>com.spotify</groupId>-->
    <!--                <artifactId>docker-maven-plugin</artifactId>-->
    <!--                <version>1.2.0</version>-->
    <!--                <executions>-->
    <!--                    <execution>-->
    <!--                        <id>build-image</id>-->
    <!--                        <phase>package</phase>-->
    <!--                        <goals>-->
    <!--                            <goal>build</goal>-->
    <!--                        </goals>-->
    <!--                    </execution>-->
    <!--                </executions>-->
    <!--                <configuration>-->
    <!--                    <dockerHost>http://212.64.18.166:52375</dockerHost>-->
    <!--                    <imageName>jingzheng/${project.artifactId}</imageName>-->
    <!--                    <imageTags>-->
    <!--                        <imageTag>${project.version}</imageTag>-->
    <!--                    </imageTags>-->
    <!--                    <forceTags>true</forceTags>-->
    <!--                    <dockerDirectory>${project.basedir}</dockerDirectory>-->
    <!--                    <resources>-->
    <!--                        <resource>-->
    <!--                            <targetPath>/</targetPath>-->
    <!--                            <directory>${project.build.directory}</directory>-->
    <!--                            <include>${project.build.finalName}.jar</include>-->
    <!--                        </resource>-->
    <!--                    </resources>-->
    <!--                </configuration>-->
    <!--            </plugin>-->

    <!--            &lt;!&ndash;mybatis自动生成工具 &ndash;&gt;-->
    <!--            <plugin>-->
    <!--                <groupId>org.mybatis.generator</groupId>-->
    <!--                <artifactId>mybatis-generator-maven-plugin</artifactId>-->
    <!--                <version>${mybatis-generator-maven-plugin-v}</version>-->
    <!--                <configuration>-->
    <!--                    <configurationFile>${basedir}/src/main/resources/generator/generatorConfig.xml</configurationFile>-->
    <!--                    <overwrite>true</overwrite>-->
    <!--                    <verbose>true</verbose>-->
    <!--                </configuration>-->
    <!--            </plugin>-->

    <!--        </plugins>-->
    <!--    </build>-->

    <repositories>
        <repository>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
            <id>jcenter-releases</id>
            <name>jcenter</name>
            <url>http://jcenter.bintray.com</url>
        </repository>
    </repositories>

</project>

