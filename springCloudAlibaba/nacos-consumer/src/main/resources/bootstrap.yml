#上面的配置项在nacos中也有，下面的自己单独配置
server:
  servlet:
    context-path: /nacos-consumer
  port: 28085


nacosServerHost: 212.64.18.166

spring:
  application:
    name: nacos-consumer
  cloud:
    sentinel:
      transport:
        dashboard: ${nacosServerHost}:30002
    nacos:
      config:
        #dataId命名不一定非的是yaml结尾,如下注释掉group则默认dataId的nacos-consumer配置文件也能生效
        server-addr: ${nacosServerHost}:30000
        file-extension: yaml
        group: lalala
      discovery:
        server-addr: ${nacosServerHost}:30000
        #        group: group1
        namespace: 028aff0e-0f98-47f3-a4d4-497c4c7f062b



feign:
  hystrix:
    enabled: true  #保证了Feign的fallback机制
  client:
    config:
      default:
        connectTimeout: 5000 # 连接超时时间
        readTimeout: 5000   # 读超时时间
        loggerLevel: headers



#这里有两个坑：1、配置文件必须是bootstrip.properties或者bootstrip.yml，如果配置application.properties或者application.yml会导致加载不到配置；
#2、spring.cloud.nacos.config.namespace如果是默认的Public，则不需填写，否则获取不到配置信息
#注：Spring Boot 配置文件的加载顺序，依次为 bootstrap.properties > bootstrap.yaml > application.properties > application.yaml
#  bootstrap.yml（bootstrap.properties）用来在程序引导时执行，应用于更加早期配置信息读取，如可以使用来配置application.yml中使用到参数等
#  application.yml（application.properties) 应用程序特有配置信息，可以用来配置后续各个模块中需使用的公共参数等。
#  bootstrap.yml 先于 application.yml 加载